What happens when you initialize a repository? Why do you need to do it?

When initializing a repository, I can now control my files on that directory
with Git. I can see what changes and when. I can fix my application' bugged codes
easily.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

I think staging area is like a buffer area or cache memory on microprocessors
it only contains what is needed to be used. And repository can be seen as
microprocessor and repository can be our main memory. All the works
are done in the working area, but only the needed ones go to repository on needed time.
It offers time and work management I think.

How can you use the staging area to make sure you have one commit per logical
change?



What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
